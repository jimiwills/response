.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Math::Geometry::Multidimensional 3pm"
.TH Math::Geometry::Multidimensional 3pm "2014-01-08" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Math::Geometry::Multidimensional \- geometrical functions in n\-dimensions
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This module has a bunch of functions that work in mulitiple dimensions,
e.g. distance of a point from a line in n\-dimensions.
.PP
.Vb 5
\&    use Math::Geometry::Multidimensional qw/distanceToLineN/;
\&    # parametric:
\&    my $distance = distanceToLineN($point, $gradients, $intersect);
\&    # symmetric:
\&    my $distance = distanceToLineP($point, $denominators, $constants);
.Ve
.SH "EXPORT"
.IX Header "EXPORT"
.IP "distanceToLineN" 4
.IX Item "distanceToLineN"
.PD 0
.IP "diagonalComponentsN" 4
.IX Item "diagonalComponentsN"
.IP "diagonalDistancesFromOriginN" 4
.IX Item "diagonalDistancesFromOriginN"
.PD
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "distanceToLineN"
.IX Subsection "distanceToLineN"
We have a line with symmetric form:
.PP
(x+a)/m = (y+b)/n = (z+c)/p ...
.PP
\&\f(CW@M\fR is the list of denominators and \f(CW@C\fR is the list of constants.
.PP
For a point \f(CW$P\fR,
.PP
.Vb 1
\&        distanceToLineN($P,\e@M,\e@C)
.Ve
.PP
returns the distance to the closest point on the line... in n\-dimensions.
.SS "lineFromTwoPoints"
.IX Subsection "lineFromTwoPoints"
.SS "diagonalDistanceFromOriginN"
.IX Subsection "diagonalDistanceFromOriginN"
This is the distance along the y=z=x=... line from any point to the origin.
First we find the closest point on y=z=x=... from our point, which happens
to be the average of the coordinates, e.g. if the point is (10,8) then the 
closest point on y=z is 9,9.  If the point is (9,8,4) then the closest point
on z=y=x is (7,7,7).  If the point is (2,3,4,7) then the closest point on 
z=y=x=w is (4,4,4,4).  Why?
.PP
For P(u,v,w) and L: (x+a)/k = (y+b)/l = (z+c)/m = t
.PP
we know that x=kt\-a ; y=lt\-b ; z=my\-c
.PP
so k(kt\-a) + l(lt\-b) + m(mt\-c) = kkt-ka + llt-lb + mmt-mc = ku+lv+mw
\&\s-1OR\s0
t(kk+ll+mm) = k(u+a)+l(v+b)+m(w+c)
so
t = (k(u+a)+l(v+b)+m(w+c)) / (kk+ll+mm)
.PP
\&\s-1BUT\s0, if  a=b=c=0 and k=l=m=1, then:
.PP
t = (x+y+z)/(3)
.PP
in general, t is the average of the coordinates.
.PP
then, x' = kt-a, and if k is 1 and a is 0, then x' is t.
.PP
P' is (t,t,t)
so the distance to P' from the origin is sqrt(3 t^2)
or sqrt( 3 * ((x+y+z)/3)^2)
or sqrt( 3 * (x+y+z)^2 / 9 )
or sqrt( (x+y+z)^2 / 3)
or (x+y+z)/\fIsqrt\fR\|(3)
or \s-1SUM\s0(coords)/sqrt(n)
.PP
Does that make sense?
.SS "diagonalDistancesFromOriginN"
.IX Subsection "diagonalDistancesFromOriginN"
Acts on columns rather than an individual point... 
give it column number, row number and list of columns.
.PP
.Vb 1
\&        my $arrayref = diagonalDistancesFromOriginN ($k,$n,@cols)
.Ve
.SS "diagonalComponentsN"
.IX Subsection "diagonalComponentsN"
Here, we are basically rotating all the data so that the \*(L"y\-axis\*(R" or whatever
you want to call the left-most co-ordinate now lies diagonally through the data.
.SS "distanceFromDiagonalN"
.IX Subsection "distanceFromDiagonalN"
As above, we know that the point P' on the diagonal closest to our point P
has the average coordinates of point P.  And the distance 
\&\s-1PP\s0' (x\-x', y\-y', z\-z') is the root of the sum of the squares. So
.PP
so, if x' = t, which is (x+y+z)/3 ...
.PP
\&\s-1PP\s0' = sqrt( (x \- x/3 \- y/3 \- z/3)^2  + (y \- x/3 \- y/3 \- z/3)^2
		           + (z + x/3 + y/3 + z/3)^2 )
.PP
= sqrt( x^2 (2/3) + y^2 (2/3) + z^2 (2/3) + 2xy + 2xz + 2yz )
.PP
this is not implemented yet.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jimi Wills, \f(CW\*(C`<jimi at webu.co.uk>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-math\-geometry\-multidimensional at rt.cpan.org\*(C'\fR, or through
the web interface at http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Math\-Geometry\-Multidimensional <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Math-Geometry-Multidimensional>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Math::Geometry::Multidimensional
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker (report bugs here)
.Sp
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Math\-Geometry\-Multidimensional <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Math-Geometry-Multidimensional>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
http://annocpan.org/dist/Math\-Geometry\-Multidimensional <http://annocpan.org/dist/Math-Geometry-Multidimensional>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
http://cpanratings.perl.org/d/Math\-Geometry\-Multidimensional <http://cpanratings.perl.org/d/Math-Geometry-Multidimensional>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
http://search.cpan.org/dist/Math\-Geometry\-Multidimensional/ <http://search.cpan.org/dist/Math-Geometry-Multidimensional/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Jimi Wills.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:
.PP
<http://www.perlfoundation.org/artistic_license_2_0>
.PP
Any use, modification, and distribution of the Standard or Modified
Versions is governed by this Artistic License. By using, modifying or
distributing the Package, you accept this license. Do not use, modify,
or distribute the Package, if you do not accept this license.
.PP
If your Modified Version has been derived from a Modified Version made
by someone other than you, you are nevertheless required to ensure that
your Modified Version complies with the requirements of this license.
.PP
This license does not grant you the right to use any trademark, service
mark, tradename, or logo of the Copyright Holder.
.PP
This license includes the non-exclusive, worldwide, free-of-charge
patent license to make, have made, use, offer to sell, sell, import and
otherwise transfer the Package with respect to any patent claims
licensable by the Copyright Holder that are necessarily infringed by the
Package. If you institute patent litigation (including a cross-claim or
counterclaim) against any party alleging that the Package constitutes
direct or contributory patent infringement, then this Artistic License
to you shall terminate on the date that such litigation is filed.
.PP
Disclaimer of Warranty: \s-1THE\s0 \s-1PACKAGE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \s-1BY\s0 \s-1THE\s0 \s-1COPYRIGHT\s0 \s-1HOLDER\s0
\&\s-1AND\s0 \s-1CONTRIBUTORS\s0 "\s-1AS\s0 \s-1IS\s0' \s-1AND\s0 \s-1WITHOUT\s0 \s-1ANY\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0.
\&\s-1THE\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0, \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0
\&\s-1PURPOSE\s0, \s-1OR\s0 NON-INFRINGEMENT \s-1ARE\s0 \s-1DISCLAIMED\s0 \s-1TO\s0 \s-1THE\s0 \s-1EXTENT\s0 \s-1PERMITTED\s0 \s-1BY\s0
\&\s-1YOUR\s0 \s-1LOCAL\s0 \s-1LAW\s0. \s-1UNLESS\s0 \s-1REQUIRED\s0 \s-1BY\s0 \s-1LAW\s0, \s-1NO\s0 \s-1COPYRIGHT\s0 \s-1HOLDER\s0 \s-1OR\s0
\&\s-1CONTRIBUTOR\s0 \s-1WILL\s0 \s-1BE\s0 \s-1LIABLE\s0 \s-1FOR\s0 \s-1ANY\s0 \s-1DIRECT\s0, \s-1INDIRECT\s0, \s-1INCIDENTAL\s0, \s-1OR\s0
\&\s-1CONSEQUENTIAL\s0 \s-1DAMAGES\s0 \s-1ARISING\s0 \s-1IN\s0 \s-1ANY\s0 \s-1WAY\s0 \s-1OUT\s0 \s-1OF\s0 \s-1THE\s0 \s-1USE\s0 \s-1OF\s0 \s-1THE\s0 \s-1PACKAGE\s0,
\&\s-1EVEN\s0 \s-1IF\s0 \s-1ADVISED\s0 \s-1OF\s0 \s-1THE\s0 \s-1POSSIBILITY\s0 \s-1OF\s0 \s-1SUCH\s0 \s-1DAMAGE\s0.
